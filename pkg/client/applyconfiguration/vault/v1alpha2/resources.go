// Copyright Â© 2023 Bank-Vaults
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

import (
	v1 "k8s.io/api/core/v1"
)

// ResourcesApplyConfiguration represents an declarative configuration of the Resources type for use
// with apply.
type ResourcesApplyConfiguration struct {
	Vault              *v1.ResourceRequirements `json:"vault,omitempty"`
	BankVaults         *v1.ResourceRequirements `json:"bankVaults,omitempty"`
	HSMDaemon          *v1.ResourceRequirements `json:"hsmDaemon,omitempty"`
	PrometheusExporter *v1.ResourceRequirements `json:"prometheusExporter,omitempty"`
	FluentD            *v1.ResourceRequirements `json:"fluentd,omitempty"`
}

// ResourcesApplyConfiguration constructs an declarative configuration of the Resources type for use with
// apply.
func Resources() *ResourcesApplyConfiguration {
	return &ResourcesApplyConfiguration{}
}

// WithVault sets the Vault field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Vault field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithVault(value v1.ResourceRequirements) *ResourcesApplyConfiguration {
	b.Vault = &value
	return b
}

// WithBankVaults sets the BankVaults field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BankVaults field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithBankVaults(value v1.ResourceRequirements) *ResourcesApplyConfiguration {
	b.BankVaults = &value
	return b
}

// WithHSMDaemon sets the HSMDaemon field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HSMDaemon field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithHSMDaemon(value v1.ResourceRequirements) *ResourcesApplyConfiguration {
	b.HSMDaemon = &value
	return b
}

// WithPrometheusExporter sets the PrometheusExporter field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrometheusExporter field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithPrometheusExporter(value v1.ResourceRequirements) *ResourcesApplyConfiguration {
	b.PrometheusExporter = &value
	return b
}

// WithFluentD sets the FluentD field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FluentD field is set to the value of the last call.
func (b *ResourcesApplyConfiguration) WithFluentD(value v1.ResourceRequirements) *ResourcesApplyConfiguration {
	b.FluentD = &value
	return b
}
