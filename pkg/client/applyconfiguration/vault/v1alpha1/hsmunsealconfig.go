// Copyright Â© 2023 Bank-Vaults
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// HSMUnsealConfigApplyConfiguration represents an declarative configuration of the HSMUnsealConfig type for use
// with apply.
type HSMUnsealConfigApplyConfiguration struct {
	Daemon     *bool   `json:"daemon,omitempty"`
	ModulePath *string `json:"modulePath,omitempty"`
	SlotID     *uint   `json:"slotId,omitempty"`
	TokenLabel *string `json:"tokenLabel,omitempty"`
	Pin        *string `json:"pin,omitempty"`
	KeyLabel   *string `json:"keyLabel,omitempty"`
}

// HSMUnsealConfigApplyConfiguration constructs an declarative configuration of the HSMUnsealConfig type for use with
// apply.
func HSMUnsealConfig() *HSMUnsealConfigApplyConfiguration {
	return &HSMUnsealConfigApplyConfiguration{}
}

// WithDaemon sets the Daemon field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Daemon field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithDaemon(value bool) *HSMUnsealConfigApplyConfiguration {
	b.Daemon = &value
	return b
}

// WithModulePath sets the ModulePath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ModulePath field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithModulePath(value string) *HSMUnsealConfigApplyConfiguration {
	b.ModulePath = &value
	return b
}

// WithSlotID sets the SlotID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SlotID field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithSlotID(value uint) *HSMUnsealConfigApplyConfiguration {
	b.SlotID = &value
	return b
}

// WithTokenLabel sets the TokenLabel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenLabel field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithTokenLabel(value string) *HSMUnsealConfigApplyConfiguration {
	b.TokenLabel = &value
	return b
}

// WithPin sets the Pin field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Pin field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithPin(value string) *HSMUnsealConfigApplyConfiguration {
	b.Pin = &value
	return b
}

// WithKeyLabel sets the KeyLabel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyLabel field is set to the value of the last call.
func (b *HSMUnsealConfigApplyConfiguration) WithKeyLabel(value string) *HSMUnsealConfigApplyConfiguration {
	b.KeyLabel = &value
	return b
}
