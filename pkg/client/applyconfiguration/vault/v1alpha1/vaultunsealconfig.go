// Copyright Â© 2023 Bank-Vaults
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VaultUnsealConfigApplyConfiguration represents an declarative configuration of the VaultUnsealConfig type for use
// with apply.
type VaultUnsealConfigApplyConfiguration struct {
	Address        *string `json:"address,omitempty"`
	UnsealKeysPath *string `json:"unsealKeysPath,omitempty"`
	Role           *string `json:"role,omitempty"`
	AuthPath       *string `json:"authPath,omitempty"`
	TokenPath      *string `json:"tokenPath,omitempty"`
	Token          *string `json:"token,omitempty"`
}

// VaultUnsealConfigApplyConfiguration constructs an declarative configuration of the VaultUnsealConfig type for use with
// apply.
func VaultUnsealConfig() *VaultUnsealConfigApplyConfiguration {
	return &VaultUnsealConfigApplyConfiguration{}
}

// WithAddress sets the Address field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Address field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithAddress(value string) *VaultUnsealConfigApplyConfiguration {
	b.Address = &value
	return b
}

// WithUnsealKeysPath sets the UnsealKeysPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UnsealKeysPath field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithUnsealKeysPath(value string) *VaultUnsealConfigApplyConfiguration {
	b.UnsealKeysPath = &value
	return b
}

// WithRole sets the Role field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Role field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithRole(value string) *VaultUnsealConfigApplyConfiguration {
	b.Role = &value
	return b
}

// WithAuthPath sets the AuthPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AuthPath field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithAuthPath(value string) *VaultUnsealConfigApplyConfiguration {
	b.AuthPath = &value
	return b
}

// WithTokenPath sets the TokenPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TokenPath field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithTokenPath(value string) *VaultUnsealConfigApplyConfiguration {
	b.TokenPath = &value
	return b
}

// WithToken sets the Token field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Token field is set to the value of the last call.
func (b *VaultUnsealConfigApplyConfiguration) WithToken(value string) *VaultUnsealConfigApplyConfiguration {
	b.Token = &value
	return b
}
