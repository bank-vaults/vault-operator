# Default values for vault-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- If set, install CRDs
crds:
  enabled: true
  # The CRD upgrade job mitigates the limitation of helm not being able to upgrade CRDs.
  # The job will apply the CRDs to the cluster before the operator is deployed, using helm hooks.
  # It deploy a corresponding clusterrole, clusterrolebinding and serviceaccount to apply the CRDs.
  # This feature is in preview, off by default and may change in the future.
  upgradeJob:
    enabled: false
    forceConflicts: false
    image:
      busybox:
        registry: docker.io
        repository: busybox
        tag: "latest"
        sha: ""
        pullPolicy: IfNotPresent
      kubectl:
        registry: registry.k8s.io
        repository: kubectl
        tag: ""  # defaults to the Kubernetes version
        sha: ""
        pullPolicy: IfNotPresent

    env: {}
    # Define resources requests and limits for single Pods.
    # See the [reference](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for details.
    resources: {}

    # Additional volumes
    extraVolumes: []

    # Additional volume mounts
    extraVolumeMounts: []

    # Define which Nodes the Pods are scheduled on.
    # See the [reference](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) for details.
    nodeSelector: {}

    # Assign custom affinity rules to the upgrade-crd job
    # See the [reference](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/) for details.
    affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2

    # If specified, the pod's tolerations.
    # See the [reference](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for details.
    tolerations: []
    # - key: "key"
    #   operator: "Equal"
    #   value: "value"
    #   effect: "NoSchedule"

    # If specified, the pod's topology spread constraints.
    # See the [reference](https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/) for details.
    topologySpreadConstraints: []
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: DoNotSchedule
    #   labelSelector:
    #     matchLabels:
    #       app: alertmanager

    # Labels to add to the upgrade-crd job
    labels: {}

    # Annotations to add to the upgrade-crd job
    annotations: {}

    # Labels to add to the upgrade-crd pod
    podLabels: {}

    # Annotations to add to the upgrade-crd pod
    podAnnotations: {}

    # Service account for upgrade crd job to use.
    # See the [reference](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/) for details.
    serviceAccount:
      create: true
      name: ""
      annotations: {}
      labels: {}
      automountServiceAccountToken: true

    # Container-specific security context configuration
    # See the [reference](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for details.
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    # SecurityContext holds pod-level security attributes and common container settings.
    # This defaults to non root user with uid 1000 and gid 2000. *v1.PodSecurityContext  false
    # See the [reference](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) for details.
    podSecurityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

# -- Number of replicas (pods) to launch.
replicaCount: 1

pdb:
  # -- Create pod disruption budget if replicaCount > 1.
  create: true
  # -- Min available for PDB.
  minAvailable: 1
  # -- Max unavailable for PDB.
  # maxUnavailable: 1

image:
  # -- Name of the image repository to pull the container image from.
  repository: ghcr.io/bank-vaults/vault-operator

  # -- [Image pull policy](https://kubernetes.io/docs/concepts/containers/images/#updating-images) for updating already existing images on a node.
  pullPolicy: IfNotPresent

  # -- Image tag override for the default value (chart appVersion).
  tag: ""

  # -- Reference to one or more secrets to be used when [pulling images](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-pod-that-uses-your-secret) (from private registries).
  # (`global.imagePullSecrets` is also supported)
  imagePullSecrets: []

  # -- Bank-Vaults image repository
  # **Deprecated:** use `bankVaults.image.repository` instead.
  bankVaultsRepository: ""

  # -- Bank-Vaults image tag
  # **Deprecated:** use `bankVaults.image.tag` instead.
  bankVaultsTag: ""

bankVaults:
  image:
    # -- Bank-Vaults image repository.
    repository: ghcr.io/bank-vaults/bank-vaults

    # -- Bank-Vaults image tag (pinned to supported Bank-Vaults version).
    tag: "v1.32.0"

# -- A name in place of the chart name for `app:` labels.
nameOverride: ""

# -- A name to substitute for the full names of resources.
fullnameOverride: ""

# -- The namespace where the operator watches for vault CR objects.
# If not defined all namespaces are watched.
watchNamespace: ""
syncPeriod: "1m"

# -- Annotations to be added to CRDs.
crdAnnotations: {}

# -- Labels to be added to deployments.
labels: {} # team: banzai

# -- Labels to be added to pods.
podLabels: {} # team: banzai

# -- Annotations to be added to pods.
podAnnotations: {} # team: banzai

serviceAccount:
  # -- Enable service account creation.
  create: true

  # -- Annotations to be added to the service account.
  annotations: {}

  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

service:
  # -- Annotations to be added to the service.
  annotations: {}

  # -- Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  type: ClusterIP

  # -- The name of the service to use.
  # If not set, a name is generated using the fullname template.
  name: ""

  externalPort: 80
  internalPort: 8080

# -- Container resource [requests and limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources) for details.
resources:
  # -- @ignored
  limits:
    cpu: 100m
    memory: 256Mi
  # -- @ignored
  requests:
    cpu: 100m
    memory: 128Mi

# -- [Node selector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector) configuration.
nodeSelector: {}

# -- [Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for node taints.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
tolerations: []

# -- [Affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) configuration.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#scheduling) for details.
affinity: {}

# -- Specify a priority class name to set [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority).
priorityClassName: ""

# -- Pod [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context) for details.
podSecurityContext: {}

# -- Container [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1) for details.
securityContext: {}

terminationGracePeriodSeconds: 10

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

psp:
  enabled: false
  vaultSA: "vault"

monitoring:
  serviceMonitor:
    # -- Enable Prometheus ServiceMonitor.
    # See the [documentation](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/design.md#servicemonitor) and the [API reference](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitor) for details.
    enabled: false

    additionalLabels: {}
    metricRelabelings: []
    relabelings: []
